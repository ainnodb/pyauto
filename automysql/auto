#!usr/bin/ksh
#=============================================================================
# HEADER
#=============================================================================
#% SYNOPSIS
#%    ${prog}
#%
#% DESCRIPTION
#%    Script to deploy mysql service
#%
#% ARGUMENTS
#%    NONE
#%
#% EXAMPLES
#%    ${prog}
#%    sh parallers inst
#%                 start
#%                 stop 
#%                 restart
#%                 rootlogin
#=============================================================================
#  HISTORY
#     20220601  ainnod motingxia@163.com
#=============================================================================
#  NOTES
#=============================================================================
# END_OF_HEADER
#=============================================================================

#=============================================================================
#  IMPORT COMMON FUNCTIONS AND VARIABLES
#=============================================================================
RUNDIR="$(cd "$(dirname "${0}")" && pwd)"
if [ -z "${FUNCTIONS_IMPORTED}" ]; then
    . ${RUNDIR}/functions.ksh
fi
if [ -z "${MYSQLFUNCTIONS_IMPORTED}" ]; then
    . ${RUNDIR}/functions_mysql.ksh
fi
#=============================================================================
#  FUNCTIONS
#=============================================================================
do_exit() {
    RC=$1
    echo "$RC" >/tmp/RC.$$
    exit $RC
}

if [ $# -lt 1 ]; then
    usage
    exit 8
fi

RC=0
scriptname=$(basename $0)
starttime=$(date +%s)
if ! [ -f ${LOG_FILE_DIR}/${scriptname}.log ]; then
    touch ${LOG_FILE_DIR}/${scriptname}.log
    LogFile=${LOG_FILE_DIR}/${scriptname}.log
else
    rm -rf ${LOG_FILE_DIR}/${scriptname}.log
    touch ${LOG_FILE_DIR}/${scriptname}.log
    LogFile=${LOG_FILE_DIR}/${scriptname}.log
fi
export LogFile=${LOG_FILE_DIR}/${scriptname}.log
log_info  "logfile: ${LogFile}"
source ~/.bash_profile

exec_counter
#=============================================================================
#  root_login_path
#=============================================================================

mysqlinit() {
    
    mysqlstop

    log_info "delete ${mysql_undo_dir} "
    rm -rf ${mysql_undo_dir}/*
    log_info "delete ${mysql_binlog_dir} "
    rm -rf ${mysql_binlog_dir}/*
    log_info "delete ${mysql_data_dir} "
    rm -rf ${mysql_data_dir}/*
    log_info "delete ${mysql_log_dir} "
    rm -rf ${mysql_log_dir}/*
    log_info "delete ${mysql_pid_dir} "
    rm -rf ${mysql_pid_dir}/*

    Generatet_Mysql_cnf

    source /root/.bash_profile
    mysqld --defaults-file=${mysqlcnf} --basedir=${basedir} --datadir=${mysql_data_dir} --user=mysql --initialize  
    if [ $? -eq 0 ]; then
        log_info "initialize mysql db successfully"
    else 
        log_error "initialize mysql db failed"
        do_exit 8
    fi
    check_file "/tmp/mysql.sock"
    check_file "/tmp/mysqlx.sock"
    ln -sf  ${mysql_pid_dir}/mysql.sock /tmp/mysql.sock
    ln -sf  ${mysql_pid_dir}/mysqlx.sock /tmp/mysqlx.sock
    log_info "mysql datbase initial setup done! " 
    log_info "waiting 10 seconds"
    sleep 10s
    mysqlstartup
    autostart
    # sh ${RUNDIR}/logpath
}


mysqlstartup(){
    if [ $(ps -ef|grep -i mysql|grep -v grep|grep -v restore|grep -v $0|wc -l) -eq 0 ];then
        log_info "mysql is not running, start it now"
    else 
        log_warning "mysql is running,no need to start"
        do_exit 4
    fi
    # (mysqld_safe --defaults-file=${mysqlcnf} --user=mysql &) 2>/dev/null 1>/dev/null           #不卡主 但是本程序下MySQL登录不上
    # {mysqld_safe --defaults-file=${mysqlcnf} --user=mysql }    &  1>/dev/null 2>/dev/null  #不工作
    # mysqld_safe --defaults-file=${mysqlcnf} --user=mysql &  1>/dev/null 2>/dev/null          #卡主 不继续执行
    # nohup mysqld_safe --defaults-file=${mysqlcnf} --user=mysql &  1>/dev/null 2>/dev/null      #卡主 不继续执行
    # (exec mysqld_safe --defaults-file=${mysqlcnf} --user=mysql &) 2>/dev/null 1>/dev/null  #不卡主 但是本程序下MySQL登录不上
    systemctl start mysqld
    sleep 2
    # mysqld_safe --defaults-file=${mysqlcnf} --user=mysql 1>/dev/null 2>/dev/null &

    if [ $(ps -ef|grep -i mysql|grep -v grep|grep -v restore|grep -v $0|wc -l) -eq 0 ]; then
        log_warning "try with mysql restarted failed"
        systemctl restart mysqld
        if [ $(ps -ef|grep -i mysql|grep -v grep|grep -v restore|grep -v $0|wc -l) -eq 2 ];then
            log_info "mysql started successfully"
        fi
        # log_warning "restart system is required"
        mysqladmin --login-path=root processlist
    else 
        log_error "mysql started failed"
        do_exit 8
    fi
}

mysqlstop(){
    if [ $(ps -ef|grep -i mysql|grep -v grep|grep -v restore|wc -l) -eq 0 ];then
        log_info "mysql is down"
        do_exit 8
    fi
    while true 
        do 
            if [ $(ps -ef|grep -i mysql|grep -v grep|grep -v restore|wc -l) -eq 0 ];then
                log_info "mysql is not running"
                break
            else
                mysqladmin --login-path=root shutdown
                if [ $? -eq 0 ]; then
                    log_info "mysql is shutdown"
                else
                    log_warning "kill mysql process"
                    for i in $(ps -ef|grep -i mysql|grep -v grep|grep -v restore|grep -v $0|awk '{print $2}');do kill -9 $i;done
                    log_warning   "mysql process are killed"
                    break
                fi
            fi
        done
}

autostart()
{
log_info "copy ${basedir}/support-files/mysql.server to /etc/init.d/mysqld"
if [ ! -f /etc/init.d/mysqld ]; then
    cp -p ${basedir}/mysql/support-files/mysql.server /etc/init.d/mysqld
    log_info "copy done"
else 
    log_warning "/etc/init.d/mysqld already exist"
fi
log_info "add mysql start up as OS"
if [ `chkconfig --list|grep -i mysql|wc -l` -eq 1 ];then
    log_warning "mysqld already there"
else
    chkconfig --add mysqld
    log_info "add mysql start up as OS up done"
fi

if [ -f /etc/my.cnf.d/my.cnf ]; then
    log_warning "/etc/my.cnf.d/ already exist" 
else
    log_info "copy ${mysqlcnf} to  /etc/my.cnf.d/ "
    cp -p ${mysqlcnf} /etc/my.cnf.d/
    chown mysql:mysql etc/my.cnf.d/
    log_info "copy ${mysqlcnf} to  /etc/my.cnf.d/ done"
fi
}

{
case $1 in
    start)
        mysqlstartup
        ;;
    stop)
        mysqlstop
        ;;
    inst)
        mysqlinit
        ;;
    # rootlogin)
    #     root_login_path
    #     ;;
    restart)
        mysqlstop
        mysqlstartup
        ;;
    *)
        usage
        ;;
esac

# mysqladmin --login-path=root processlist

log_info ""
log_info "RC==${RC}"
log_info ""                               
} 2>&1 | tee -a ${LogFile}

if [[ -f /tmp/RC.$$ ]];then
    RC=$(cat /tmp/RC.$$)
    rm -rf /tmp/RC.$$
fi
if [ "$RC" == "0" ]; then
    log_info   "OK: EndofScript ${scriptname}"    | tee -a ${LogFile}
else
    log_error  "ERROR: EndofScript ${scriptname} " | tee -a ${LogFile}
fi
ende=$(date +%s)
diff=$((ende - starttime))
log_info     "$(date)   Runtime      :   $diff"| tee -a ${LogFile} 
log_info     "Save log to ${LogFile}" | tee -a ${LogFile} 
logrename  ${LogFile}
exit ${RC}